{"ast":null,"code":"var _jsxFileName = \"/Users/personal/SynologyDrive/Drive/Dev/code/media/src/components/Media/Player/JWPlayerFullScreen.js\";\nimport React from 'react';\nimport ReactJWPlayer from 'react-jw-player';\nconst displayName = 'JWPlayerFullScreen';\n\nclass JWPlayerFullScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videoTitle: ''\n    };\n    this.onAdPlay = this.onAdPlay.bind(this);\n    this.onReady = this.onReady.bind(this);\n    this.onVideoLoad = this.onVideoLoad.bind(this);\n    this.playerId = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  }\n\n  onReady(event) {\n    // interact with JW Player API here\n    const player = window.jwplayer(this.playerId);\n  }\n\n  onAdPlay(event) {// track the ad play here\n  }\n\n  onVideoLoad(event) {\n    this.setState({\n      videoTitle: event.item.description // this only works with json feeds!\n\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, console.log('Test'), React.createElement(ReactJWPlayer, {\n      licenseKey: this.props.video.licenseKey,\n      playlist: this.props.video,\n      isMuted: this.props.playerParams.isMuted,\n      isAutoPlay: this.props.playerParams.isAutoPlay,\n      controlbar: this.props.playerParams.controlBar,\n      onAdPlay: this.onAdPlay,\n      onReady: this.onReady,\n      onVideoLoad: this.onVideoLoad,\n      aspectRatio: this.props.video.aspectRatio,\n      playerId: this.playerId // bring in the randomly generated playerId\n      ,\n      playerScript: this.props.playerParams.playerScript //'https://content.jwplatform.com/libraries/Jq6HIbgz.js' \n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n} //ReactJWPlayerContainer.propTypes = propTypes;\n\n\nJWPlayerFullScreen.displayName = displayName;\nexport default JWPlayerFullScreen;","map":{"version":3,"sources":["/Users/personal/SynologyDrive/Drive/Dev/code/media/src/components/Media/Player/JWPlayerFullScreen.js"],"names":["React","ReactJWPlayer","displayName","JWPlayerFullScreen","Component","constructor","props","state","videoTitle","onAdPlay","bind","onReady","onVideoLoad","playerId","Math","random","toString","substring","event","player","window","jwplayer","setState","item","description","render","console","log","video","licenseKey","playerParams","isMuted","isAutoPlay","controlBar","aspectRatio","playerScript"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,MAAMC,WAAW,GAAG,oBAApB;;AAEA,MAAMC,kBAAN,SAAiCH,KAAK,CAACI,SAAvC,CAAiD;AAE/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AAEA,SAAKG,QAAL,GAAgBC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,EAAwC,EAAxC,IAA8CH,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,EAAwC,EAAxC,CAA9D;AACD;;AAEDN,EAAAA,OAAO,CAACO,KAAD,EAAQ;AACb;AACA,UAAMC,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgB,KAAKR,QAArB,CAAf;AACD;;AACDJ,EAAAA,QAAQ,CAACS,KAAD,EAAQ,CACd;AACD;;AACDN,EAAAA,WAAW,CAACM,KAAD,EAAQ;AACjB,SAAKI,QAAL,CAAc;AACZd,MAAAA,UAAU,EAAEU,KAAK,CAACK,IAAN,CAAWC,WADX,CACuB;;AADvB,KAAd;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIC,OAAO,CAACC,GAAR,CAAY,MAAZ,CADJ,EAEU,oBAAC,aAAD;AACE,MAAA,UAAU,EAAE,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,UAD/B;AAEE,MAAA,QAAQ,EAAE,KAAKvB,KAAL,CAAWsB,KAFvB;AAIE,MAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWwB,YAAX,CAAwBC,OAJnC;AAKE,MAAA,UAAU,EAAE,KAAKzB,KAAL,CAAWwB,YAAX,CAAwBE,UALtC;AAME,MAAA,UAAU,EAAE,KAAK1B,KAAL,CAAWwB,YAAX,CAAwBG,UANtC;AAQE,MAAA,QAAQ,EAAE,KAAKxB,QARjB;AASE,MAAA,OAAO,EAAE,KAAKE,OAThB;AAUE,MAAA,WAAW,EAAE,KAAKC,WAVpB;AAYE,MAAA,WAAW,EAAE,KAAKN,KAAL,CAAWsB,KAAX,CAAiBM,WAZhC;AAcE,MAAA,QAAQ,EAAE,KAAKrB,QAdjB,CAc2B;AAd3B;AAeE,MAAA,YAAY,EAAG,KAAKP,KAAL,CAAWwB,YAAX,CAAwBK,YAfzC,CAeuD;AAfvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFV,CADF;AAuBD;;AApD8C,C,CAwDjD;;;AACAhC,kBAAkB,CAACD,WAAnB,GAAiCA,WAAjC;AACA,eAAeC,kBAAf","sourcesContent":["import React from 'react';\nimport ReactJWPlayer from 'react-jw-player';\n\nconst displayName = 'JWPlayerFullScreen';\n \nclass JWPlayerFullScreen extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      videoTitle: '',\n    };\n \n    this.onAdPlay = this.onAdPlay.bind(this);\n    this.onReady = this.onReady.bind(this);\n    this.onVideoLoad = this.onVideoLoad.bind(this);\n \n    this.playerId = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  }\n\n  onReady(event) {\n    // interact with JW Player API here\n    const player = window.jwplayer(this.playerId);\n  }\n  onAdPlay(event) {\n    // track the ad play here\n  }\n  onVideoLoad(event) {\n    this.setState({\n      videoTitle: event.item.description // this only works with json feeds!\n    });\n  }\n  render() {\n    return (\n      <div className=''>\n        { console.log('Test') }\n                <ReactJWPlayer\n                  licenseKey={this.props.video.licenseKey}\n                  playlist={this.props.video}\n\n                  isMuted={this.props.playerParams.isMuted}\n                  isAutoPlay={this.props.playerParams.isAutoPlay}\n                  controlbar={this.props.playerParams.controlBar}\n\n                  onAdPlay={this.onAdPlay}\n                  onReady={this.onReady}\n                  onVideoLoad={this.onVideoLoad}\n\n                  aspectRatio={this.props.video.aspectRatio}\n                  \n                  playerId={this.playerId} // bring in the randomly generated playerId\n                  playerScript= {this.props.playerParams.playerScript} //'https://content.jwplatform.com/libraries/Jq6HIbgz.js' \n                />\n      </div>\n                  \n    );\n  }\n\n}\n \n//ReactJWPlayerContainer.propTypes = propTypes;\nJWPlayerFullScreen.displayName = displayName;\nexport default JWPlayerFullScreen;"]},"metadata":{},"sourceType":"module"}